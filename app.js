// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Telegram Web App
let tg = window.Telegram.WebApp;
tg.expand();
tg.ready();

console.log("INLIFE App –∑–∞–ø—É—â–µ–Ω!");

// –•—Ä–∞–Ω–∏–ª–∏—â–µ —Å–æ–±—ã—Ç–∏–π
let events = [
    {
        id: 1,
        title: "–ù–æ—á–Ω–∞—è –º–æ–ª–∏—Ç–≤–∞",
        date: "31 –æ–∫—Ç—è–±—Ä—è (–ø—è—Ç–Ω–∏—Ü–∞), 21:00",
        location: "–û—Å–Ω–æ–≤–Ω–æ–π –∑–∞–ª",
        participants: []
    },
    {
        id: 2,
        title: "–ú–æ–ª–æ–¥—ë–∂–Ω–∞—è –≤—Å—Ç—Ä–µ—á–∞", 
        date: "2 –Ω–æ—è–±—Ä—è (–≤–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ), 18:00",
        location: "–ú–æ–ª–æ–¥—ë–∂–Ω—ã–π –∑–∞–ª",
        participants: []
    }
];

// –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∞ (–≤ —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ - —á–µ—Ä–µ–∑ –±–µ–∫–µ–Ω–¥)
function checkAdminRights() {
    const user = tg.initDataUnsafe.user;
    // –í—Ä–µ–º–µ–Ω–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ - –≤ –ø—Ä–æ–¥–∞–∫—à–µ–Ω–µ —á–µ—Ä–µ–∑ –±–µ–∫–µ–Ω–¥
    const isAdmin = user && (user.username === 'NG_VLADIMIR' || user.username === 'Joyliana');
    
    if (isAdmin) {
        document.body.classList.add('show-admin');
        console.log("üëë –ê–¥–º–∏–Ω –¥–æ—Å—Ç—É–ø –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω");
    }
}

// –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ —ç–∫—Ä–∞–Ω–æ–≤
function showScreen(screenId) {
    document.querySelectorAll('.screen').forEach(screen => {
        screen.classList.remove('active');
    });
    
    document.getElementById(screenId).classList.add('active');
    updateActiveTab(screenId);
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –ø—Ä–∏ –ø–µ—Ä–µ—Ö–æ–¥–µ –Ω–∞ —ç–∫—Ä–∞–Ω—ã
    if (screenId === 'events-screen') {
        renderEvents();
    } else if (screenId === 'admin-screen') {
        renderAdminEvents();
    }
}

// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∞–∫—Ç–∏–≤–Ω–æ–π –≤–∫–ª–∞–¥–∫–∏
function updateActiveTab(screenId) {
    const tabMap = {
        'welcome-screen': 0,
        'events-screen': 1,
        'admin-screen': 3
    };
    
    document.querySelectorAll('.tab-item').forEach((tab, index) => {
        tab.classList.toggle('active', index === tabMap[screenId]);
    });
}

// –†–µ–Ω–¥–µ—Ä —Å–æ–±—ã—Ç–∏–π –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
function renderEvents() {
    const container = document.getElementById('events-container');
    const emptyState = document.getElementById('empty-events');
    
    if (events.length === 0) {
        emptyState.style.display = 'block';
        container.innerHTML = '';
        return;
    }
    
    emptyState.style.display = 'none';
    
    container.innerHTML = events.map(event => `
        <div class="event-card">
            <div class="event-header">
                <h3 class="event-title">${event.title}</h3>
                <span class="event-badge">${event.participants.length} —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤</span>
            </div>
            <div class="event-details">
                <div class="event-detail">
                    <i class="ri-calendar-line detail-icon"></i>
                    <span>${event.date}</span>
                </div>
                <div class="event-detail">
                    <i class="ri-map-pin-line detail-icon"></i>
                    <span>${event.location}</span>
                </div>
            </div>
            <button class="ios-button secondary" onclick="joinEvent(${event.id}, this)">
                <i class="ri-user-add-line"></i> –ü—Ä–∏–Ω—è—Ç—å —É—á–∞—Å—Ç–∏–µ
            </button>
        </div>
    `).join('');
}

// –†–µ–Ω–¥–µ—Ä —Å–æ–±—ã—Ç–∏–π –¥–ª—è –∞–¥–º–∏–Ω–æ–≤
function renderAdminEvents() {
    const container = document.getElementById('admin-events-container');
    
    if (events.length === 0) {
        container.innerHTML = '<p style="text-align: center; color: var(--ios-text-secondary);">–ù–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö —Å–æ–±—ã—Ç–∏–π</p>';
        return;
    }
    
    container.innerHTML = events.map(event => `
        <div class="admin-event-item">
            <div class="admin-event-info">
                <div class="admin-event-name">${event.title}</div>
                <div class="admin-event-meta">${event.date} ‚Ä¢ ${event.location}</div>
                <div class="admin-event-meta">${event.participants.length} —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤</div>
            </div>
            <div class="admin-event-actions">
                <button class="delete-btn" onclick="deleteEvent(${event.id})">
                    <i class="ri-delete-bin-line"></i>
                </button>
            </div>
        </div>
    `).join('');
}

// –ó–∞–ø–∏—Å—å –Ω–∞ —Å–æ–±—ã—Ç–∏–µ
function joinEvent(eventId, button) {
    const event = events.find(e => e.id === eventId);
    if (!event) return;
    
    const originalHTML = button.innerHTML;
    
    // –í–∏–∑—É–∞–ª—å–Ω–∞—è –æ–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å
    button.innerHTML = '<i class="ri-loader-4-line"></i> –ó–∞–ø–∏—Å—ã–≤–∞–µ–º...';
    button.disabled = true;
    
    setTimeout(() => {
        if (!event.participants.includes('user')) {
            event.participants.push('user');
        }
        
        button.innerHTML = '<i class="ri-check-line"></i> –¢—ã –∑–∞–ø–∏—Å–∞–Ω!';
        button.classList.remove('secondary');
        button.classList.add('success');
        button.disabled = true;
        
        tg.showPopup({
            title: '–£—Å–ø–µ—à–Ω–æ!',
            message: '–¢—ã –∑–∞–ø–∏—Å–∞–Ω –Ω–∞ —Å–æ–±—ã—Ç–∏–µ! –ñ–¥—ë–º —Ç–µ–±—è!',
            buttons: [{ type: 'ok' }]
        });
        
        renderEvents();
        
    }, 800);
}

// –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Å–æ–±—ã—Ç–∏—è
function addEvent(eventData) {
    const newEvent = {
        id: Date.now(), // –ü—Ä–æ—Å—Ç–æ–π ID –Ω–∞ –æ—Å–Ω–æ–≤–µ –≤—Ä–µ–º–µ–Ω–∏
        title: eventData.title,
        date: eventData.date,
        location: eventData.location,
        participants: []
    };
    
    events.unshift(newEvent); // –î–æ–±–∞–≤–ª—è–µ–º –≤ –Ω–∞—á–∞–ª–æ
    renderEvents();
    renderAdminEvents();
    
    tg.showAlert('–°–æ–±—ã—Ç–∏–µ —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–æ!');
}

// –£–¥–∞–ª–µ–Ω–∏–µ —Å–æ–±—ã—Ç–∏—è
function deleteEvent(eventId) {
    if (confirm('–£–¥–∞–ª–∏—Ç—å —ç—Ç–æ —Å–æ–±—ã—Ç–∏–µ?')) {
        events = events.filter(event => event.id !== eventId);
        renderEvents();
        renderAdminEvents();
        tg.showAlert('–°–æ–±—ã—Ç–∏–µ —É–¥–∞–ª–µ–Ω–æ');
    }
}

// –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –±—É–¥—É—â–∏—Ö —Ñ—É–Ω–∫—Ü–∏—è—Ö
function showComingSoon() {
    tg.showAlert('–≠—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è –ø–æ—è–≤–∏—Ç—Å—è –≤ –±–ª–∏–∂–∞–π—à–∏—Ö –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è—Ö!');
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ
document.addEventListener('DOMContentLoaded', function() {
    checkAdminRights();
    renderEvents();
    
    // –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ñ–æ—Ä–º—ã –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Å–æ–±—ã—Ç–∏—è
    document.getElementById('add-event-form').addEventListener('submit', function(e) {
        e.preventDefault();
        
        const formData = {
            title: document.getElementById('event-title').value,
            date: document.getElementById('event-date').value,
            location: document.getElementById('event-location').value
        };
        
        addEvent(formData);
        
        // –û—á–∏—Å—Ç–∫–∞ —Ñ–æ—Ä–º—ã
        this.reset();
    });
    
    // –ê–¥–∞–ø—Ç–∞—Ü–∏—è –ø–æ–¥ —Ç–µ–º—É Telegram
    if (tg.colorScheme === 'dark') {
        document.documentElement.style.setProperty('--ios-bg', '#000000');
        document.documentElement.style.setProperty('--ios-card', '#1c1c1e');
    }
});